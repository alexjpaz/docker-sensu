#!/bin/bash
set -e

process_template(){
  pushd $1 > /dev/null
  for FILE in *.tmpl
  do
    echo "Processing $FILE file..."
    envtpl -in $FILE > ${FILE%.*}
  done
  popd > /dev/null
}

/bin/install $RUNTIME_INSTALL

SENSU_SERVICE=${SENSU_SERVICE-$1}

case "$SENSU_SERVICE" in
  api)
    DEPENDENCIES="redis transport"
    DIRS="$CONFIG_DIR,$CHECK_DIR"
    ;;&
  client)
    DEPENDENCIES="client transport"
    DIRS="$CONFIG_DIR"

    if [[ "${TRANSPORT_NAME}" == "redis" ]]; then
      DEPENDENCIES="redis $DEPENDENCIES"
    fi
    ;;&
  server)
    DEPENDENCIES="redis api transport"
    DIRS="$CONFIG_DIR,$CHECK_DIR,$HANDLERS_DIR"
    ;;&
  validate)
    DEPENDENCIES="redis api transport"
    VALIDATE_ONLY="true"
    ;;&
  api|server|client|validate)
    shopt -s nullglob #fixes null glob when no file exists

    process_template $CONFIG_DIR
    process_template $CHECK_DIR
    process_template $HANDLERS_DIR
    
    for INDEX in $DEPENDENCIES
    do
      envtpl -in /etc/sensu/templates/${INDEX}.json.tmpl > $CONFIG_DIR/${INDEX}.json
    done

    # use host (not container) dirs for checks and metrics
    sed -i "s|/dev|$HOST_DEV_DIR|g" /usr/local/bundle/bin/*.rb
    sed -i "s|/proc|$HOST_PROC_DIR|g" /usr/local/bundle/bin/*.rb
    sed -i "s|/sys|$HOST_SYS_DIR|g" /usr/local/bundle/bin/*.rb

    find /etc/sensu -regex '.*\.ya?ml' | while read yamlFile; do
      echo "Converting yaml to json"
      jsonFile=$(echo ${yamlFile} | sed -r -e 's/\.ya?ml/.json/');
      yaml2json ${yamlFile} > ${jsonFile}
    done

    if [[ "${VALIDATE_ONLY}" == "true" ]]; then
      echo 'No errors'
      exit 0
    fi

    sensu-$SENSU_SERVICE -d $DIRS -e $EXTENSION_DIR -L $LOG_LEVEL $OPTIONS
    ;;
  *)
    echo 'Specify either api/server/client/validate'
    exit 1
    ;;
esac
